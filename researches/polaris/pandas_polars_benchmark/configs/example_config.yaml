# Пример конфигурации для системы бенчмаркинга Pandas vs Polars
# Эта конфигурация демонстрирует все доступные опции

benchmark:
  name: "Example Benchmark Configuration"
  version: "1.0.0"
  description: "Пример конфигурации со всеми возможными параметрами"

environment:
  seed: 42  # Для воспроизводимости результатов
  libraries:
    pandas:
      enabled: true
      backends: 
        - numpy      # Стандартный backend
        - pyarrow    # Новый backend с Arrow
    polars:
      enabled: true
      backends: null  # Polars не имеет отдельных backends

data_generation:
  # Размеры датасетов для тестирования
  sizes: [1000, 10000, 100000, 1000000]
  
  # В каких форматах сохранять
  save_formats: ["csv", "parquet"]
  
  # Типы датасетов
  datasets:
    numeric:
      enabled: true
      columns: 20
      numeric_types: ["int", "float"]
      int_range: [-1000000, 1000000]
      float_range: [-1000.0, 1000.0]
      null_percentage: 0.05
      
    string:
      enabled: true
      columns: 10
      cardinality_ratios: [0.1, 0.5, 0.9]  # Низкая, средняя, высокая
      string_length_range: [5, 50]
      null_percentage: 0.1
      
    datetime:
      enabled: true
      columns: 5
      start_date: "2020-01-01"
      end_date: "2023-12-31"
      frequencies: ["D", "H", "T"]  # День, час, минута
      null_percentage: 0.02
      
    mixed:
      enabled: true
      numeric_columns: 10
      string_columns: 5
      datetime_columns: 3
      bool_columns: 2
      null_percentage: 0.1

operations:
  # IO операции
  io:
    - read_csv
    - write_csv
    - read_parquet
    - write_parquet
    
  # Фильтрация
  filter:
    - simple_filter        # Одно условие
    - complex_filter       # Множественные условия
    - isin_filter         # Проверка вхождения
    - pattern_filter      # Поиск по паттерну
    
  # Группировка
  groupby:
    - single_column_groupby
    - multi_column_groupby
    - multi_aggregation
    - window_functions
    
  # Сортировка
  sort:
    - single_column_sort
    - multi_column_sort
    - custom_sort
    
  # Соединения
  join:
    - inner_join
    - left_join
    - multi_key_join
    - asof_join
    
  # Строковые операции
  string:
    - contains_operation
    - replace_operation
    - extract_operation
    - string_length
    - concatenate_operation

profiling:
  # Параметры профилирования
  min_runs: 3          # Минимум запусков
  max_runs: 50         # Максимум запусков
  target_cv: 0.05      # Целевой коэффициент вариации
  warmup_runs: 2       # Прогревочные запуски
  timeout_seconds: 300 # Таймаут на операцию
  
  # Трекинг памяти
  memory_tracking:
    enabled: true
    interval_ms: 10    # Интервал замеров памяти
    
  # Изоляция процессов
  process_isolation:
    enabled: true
    memory_limit_mb: 8192  # Лимит памяти для процесса

analysis:
  # Обнаружение выбросов
  outlier_detection:
    method: "iqr"      # Метод: iqr, zscore, percentile
    iqr_multiplier: 1.5
    zscore_threshold: 3.0
    percentile_bounds: [5, 95]
    
  # Статистический анализ
  statistics:
    confidence_level: 0.95
    bootstrap_samples: 1000
    
  # Сравнение
  comparison:
    baseline_library: "pandas"
    significance_level: 0.05
    effect_size_threshold: 0.2

output:
  # Сохранение результатов
  save_raw_results: true
  save_processed_results: true
  
  # Визуализация
  generate_plots: true
  plot_formats: ["html", "png", "svg"]
  
  # Отчеты
  create_report: true
  report_sections:
    - summary
    - methodology
    - performance_comparison
    - detailed_analysis
    - recommendations
    
  # Форматы экспорта
  export_formats:
    - html
    - json
    - csv

# Дополнительные настройки
advanced:
  # Параллельное выполнение
  parallel_execution:
    enabled: false
    max_workers: 4
    
  # Кеширование
  caching:
    enabled: true
    cache_datasets: true
    cache_results: false
    
  # Логирование
  logging:
    console_level: "INFO"
    file_level: "DEBUG"
    rotation: "daily"
    retention_days: 30
    
  # Нотификации
  notifications:
    enabled: false
    email: null
    webhook: null